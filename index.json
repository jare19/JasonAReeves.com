[{"categories":null,"contents":"\nGo Fastly is a Golang API client for interacting with most facets of the Fastly API.\nThere was an API endpoint missing from the go-fastly API client, Event Logs. I added the event logs endpoint to the package as well as all the tests. I also noticed that the returned objects for the dictionary objects and items were not up to date so I updated those as well.\n","permalink":"https://jasonareeves.com/projects/contributions/go-fastly/","tags":["Go","GoLang","Fastly","WAF","Cloud Security","CDN"],"title":"GO-Fastly updates"},{"categories":null,"contents":" \nPort Authority is a solution that I helped develop at Target. I was included in the development after it was 1\u0026frasl;2 way complete. I was able to enable scanning of images pulled from Docker Hub (exisiting functunality was to scan images from private repos), as well as create a drone.io plugin to enable pipeline scanning of a container in github enterprise. It was my first real world experience with Go and API development. The final product is not perfect but it was a great learning experience and gets the job done.\nFrom the README: The Port Authority API is capable of orchestrating scans of individual public or private images as well as scanning entire private Docker registries like Docker Hub, Google Container Registry or Artifactory. To accomplish this, Port Authority breaks each Docker image into layers and sends it to the open source static analysis tool Clair in the backend to perform the scans and identify vulnerabilities. Upon completion of this workflow Port Authority maintains a manifest of the images and scan results.\nPort Authority also supplies developers with customizable offerings to assist with the audit and governance of their container workloads. Port Authority provides a webhook that when leveraged by a Kubernetes admission controller will allow or deny deployments based off of user-defined policies and image attributes. Port Authority then achieves run-time inspection by integrating with Kubernetes to discover running containers and inventorying those deployed images for scanning.\n","permalink":"https://jasonareeves.com/projects/contributions/portauthority/","tags":["Go","Glide","Clair","Docker","Kubernetes","Minikube","Artifactory","Containers","Security","API","REST","Google Cloud Platform","PortAuthority","Drone.io","GitHub Enterprise","CLI"],"title":"Portauthority"},{"categories":null,"contents":"The Atom plugin that allows users to launch a Hugo server with live refresh.\n On every hugo server lanuch, three or four pages would open instead of the one. The hugo server would not shutdown on macOS when wanting to exit.  I took this oportunity to fix the issue, as well as learn CoffeeScript to do it.\n","permalink":"https://jasonareeves.com/projects/contributions/atom-hugo/","tags":["CoffeeScript","Hugo","Atom","Bash"],"title":"Atom-Hugo Fixes"},{"categories":null,"contents":"","permalink":"https://jasonareeves.com/projects/creations/chatnotify/","tags":["Go","Slack","HipChat","Chatops","TDD"],"title":"Chatnotify"},{"categories":null,"contents":" This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026quot;HTML\u0026quot;, \u0026quot;JSON\u0026quot;]  Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026quot;contents\u0026quot;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026quot;tags\u0026quot;:{{ .Params.tags | jsonify }}{{end}}, \u0026quot;categories\u0026quot; : {{ .Params.categories | jsonify }}, ...  Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026quot;title\u0026quot;, \u0026quot;contents\u0026quot;, \u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot; ]  ","permalink":"https://jasonareeves.com/search/","tags":null,"title":"Search Results"}]